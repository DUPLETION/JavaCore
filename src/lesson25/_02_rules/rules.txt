Общая форма записи лямбда выражения
(парамтеры) -> {тело выражения)}

Так нельзя
(cat, value) -> cat.getType().equals(value)
нужен целевой тип

Правильная запись
Searchable<Breed> breedSearchable = (cat, value) -> cat.getType().equals(value);

1. Лямбда выражение может содержать 0 или больше входных параметров
 (int a, int b) -> {return a + b;}
 () -> 89;
 3 параметра и меньше - отлично
 7 - терпимо
2. Тип параметр может быть объявлен явно(пример выше) или выведен из значения параметров
 (int a, int b) -> {return a + b;}
 (a) -> {sout(a)};
3. Если параметров нет, или большего 1, то скобки нужны
4. Если параметр 1, то скобки не нужны, но тут и нельзя явно указать его тип
 a -> return a * 2;
5. Нет необходимости исп {} и return если тело состоит из 1 выражения. но можно и писать
 a -> a*2;
6. Если в теле больше 1 строки(выражения) return и {} обязательны
 () -> {
     sout(" Hello Wrold!");
     return 4;
 }
7. Если ключевое слово return отсутствует, то возвращаемый тип может быть void
 () -> {
      sout(" Hello Wrold!");

  }